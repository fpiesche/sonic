name: Build tagged release

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  # PLATFORMS: linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64
  PLATFORMS: linux/arm64/v8,linux/amd64
  IMAGE_NAME: sonic
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/master' }}
  BUILD_RELEASE: true

jobs:

  build-images:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "[SETUP] Get latest non-nightly tag"
        run: |
          git fetch --tags
          SONIC_VERSION=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' --count=1 | sed "s:refs/tags/::")
          echo "Latest tag is ${SONIC_VERSION}."
          echo "SONIC_VERSION=${SONIC_VERSION}" >> $GITHUB_ENV
          echo "SONIC_COMMIT=$(git rev-parse --short ${SONIC_VERSION})" >> $GITHUB_ENV
          git checkout ${SONIC_VERSION}

      - name: "[SETUP] Check whether ${{ env.SONIC_VERSION }} needs building"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        run: |
          # Check whether there already is a Docker image for the current tag
          SONIC_TAGS=$(curl -s https://registry.hub.docker.com/v1/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}/tags | jq -r ".[].name") || SERVER_TAGS="none"
          for tag in ${SONIC_TAGS[@]}; do
            if [[ "$tag" == "${SONIC_VERSION}" ]]; then
              echo "Release ${tag} has already been built."
              echo "BUILD_RELEASE=false" >> $GITHUB_ENV
              exit
            fi
          done

      - name: "[SETUP] Setup QEMU"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v1

      - name: "[SETUP] Setup Docker BuildKit"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: "[SETUP] Login to DockerHub"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "[SETUP] Login to GitHub Container Registry"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: "[BUILD] Build Sonic and export compiled executable"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}
          push: false
          outputs: type=local,dest=./artifacts
          target: export

      - name: "[BUILD] Build and push ${{ env.IMAGE_NAME }}:${{ env.SONIC_VERSION }} Docker image"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v2
        with:
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ env.SONIC_VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.SONIC_VERSION }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ env.PUSH_IMAGE }}
          target: image

      - name: "[RELEASE] Tarball build artifacts"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        run: |
          for artifact in ${{ github.workspace }}/artifacts/*; do
            platform=$(basename $artifact)
            cd $artifact
            tar czf ${{ github.workspace }}/artifacts/sonic-${{ env.SONIC_VERSION }}.$platform.tar.gz *
            cd ${{ github.workspace }}
          done

      - name: "[RELEASE] Publish amd64 artifact"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: sonic-${{ env.SONIC_VERSION }} (amd64)
          path: ${{ github.workspace }}/artifacts/sonic-${{ env.SONIC_VERSION }}.linux_amd64.tar.gz

      - name: "[RELEASE] Publish arm64 artifact"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: sonic-${{ env.SONIC_VERSION }} (arm64)
          path: ${{ github.workspace }}/artifacts/sonic-${{ env.SONIC_VERSION }}.linux_arm64.tar.gz

      - name: "[RELEASE] Create GitHub release"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Sonic ${{ env.SONIC_VERSION }}
          tag_name: refs/tags/${{ env.SONIC_VERSION }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "[RELEASE] Upload amd64 artifact to release"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifacts/sonic-${{ env.SONIC_VERSION }}.linux_amd64.tar.gz
          asset_name: sonic-${{ env.SONIC_VERSION }}.linux_amd64.tar.gz
          asset_content_type: application/gzip

      - name: "[RELEASE] Upload arm64 artifact to release"
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifacts/sonic-${{ env.SONIC_VERSION }}.linux_arm64.tar.gz
          asset_name: sonic-${{ env.SONIC_VERSION }}.linux_arm64.tar.gz
          asset_content_type: application/gzip
